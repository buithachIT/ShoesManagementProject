@model IEnumerable<Shared.Models.ProductVariant>
@using System.Text.Json
@{
    var colorSizes = ViewData["ColorSizes"];
}

<head>
    <link rel="stylesheet" href="~/css/detailproduct.css" />
    <style>
        .selected-color {
            border: 2px solid black;
        }

        .color-img {
            display: none;
        }

        .available {
            background-color: #e0ffe0;
            cursor: pointer;
        }

        .out-of-stock {
            background-color: #f8d7da;
            color: #721c24;
        }

        .size-btn {
            margin: 5px;
            padding: 5px 10px;
        }
    </style>
</head>

<div class="container w-100 d-flex justify-content-center">
    <!-- Bên trái: ảnh sản phẩm -->
    <div class="small-image d-flex mt-5 me-5">
        <div class="sub-image d-flex flex-column me-5 scroll-images">
            @foreach (var variant in Model)
            {
                foreach (var img in variant.Images)
                {
                    <img src="@Url.Content("~/image/image_product/" + img.ImageUrl)" class="mb-2 sub-img" alt="Ảnh sản phẩm"
                        width="150">
                }
            }
        </div>

        <div class="image-large">
            <div id="main-img">
                @if (Model.Any() && Model.First().Images.Any())
                {
                    <img src="@Url.Content("~/image/image_product/" + Model.First().Images.First().ImageUrl)"
                        alt="Ảnh sản phẩm chính" width="450" id="main-image">
                }
            </div>
        </div>
    </div>

    <!-- Bên phải: thông tin và biến thể -->
    <div class="product-info mt-5 me-5 pe-5">
        <h4>Nike Air Max 90 LV8</h4>
        <p>Women shoes</p>
        <p>500.000 <sup>đ</sup></p>

        <div class="product-variant">
            <!-- Màu -->
            <div class="pv-color d-flex mb-3">
                @foreach (var color in colorSizes as dynamic)
                {
                    <div class="product-color-container d-flex flex-column align-items-center me-4">
                        <div class="product-color mb-1 product-color"
                            style="background-color: @color.ColorHex; width: 25px; height: 25px; border-radius: 50%; cursor: pointer; border: 1px solid;"
                            onclick="selectColor('@color.ColorId')" data-color="@color.ColorId">
                        </div>
                        @foreach (var img in color.Images)
                        {
                            <img src="@Url.Content("~/image/image_product/" + img)" width="80" alt="Ảnh" class="color-img"
                                data-color="@color.ColorId">
                        }
                    </div>
                }
            </div>

            <!-- Size -->
            <div class="pv-size mb-4">
                <div id="size-options">
                    <p>Chọn màu để xem size</p>
                </div>
            </div>
        </div>

        <div class="btn btn-custom btn-outline-dark mb-3" id="addToCartBtn" onclick="addToCart()">
            Add to cart
        </div>

        <div id="cartMessage" class="mt-2 text-danger"></div><br>
        <div class="btn btn-custom btn-outline-dark">Buy now</div>
    </div>
</div>
@section Scripts {
    <script>

        const colorSizes = @Html.Raw(Json.Serialize(ViewData["ColorSizes"]));


        console.log("ColorSizes data:", colorSizes);


        const mainImage = document.getElementById('main-image');
        document.querySelectorAll('.sub-img').forEach(img => {
            img.addEventListener('click', function () {
                mainImage.src = this.src;
            });
        });


        function updateSizeOptions(colorId) {
            const sizeContainer = document.getElementById("size-options");
            sizeContainer.innerHTML = "";

            if (!colorId) {
                sizeContainer.innerHTML = "<p>Vui lòng chọn màu trước</p>";
                return;
            }

            const selectedColor = colorSizes.find(c => c.colorId == colorId);
            if (!selectedColor || !selectedColor.sizes) {
                sizeContainer.innerHTML = "<p>Không có size nào cho màu này</p>";
                return;
            }

            let html = "<h5>Chọn Size</h5><div class='d-flex flex-wrap'>";

            selectedColor.sizes.forEach(size => {
                if (size.quantity > 0) {
                    html += `<button class="size-btn available" data-size="${size.idSize}">
                                                                        EU ${size.sizeValue}
                                                                     </button>`;
                } else {
                    html += `<button class="size-btn out-of-stock" disabled>
                                                                        EU ${size.sizeValue}
                                                                     </button>`;
                }
            });

            html += "</div>";
            sizeContainer.innerHTML = html;
        }


        function selectColor(colorId) {

            document.querySelectorAll('.product-color').forEach(dot => {
                dot.classList.remove('selected-color');
            });
            document.querySelector(`.product-color[data-color="${colorId}"]`).classList.add('selected-color');


            document.querySelectorAll('.color-img').forEach(img => {
                img.style.display = 'none';
            });
            document.querySelectorAll(`.color-img[data-color="${colorId}"]`).forEach(img => {
                img.style.display = 'block';
            });


            updateSizeOptions(colorId);
        }


        document.addEventListener("DOMContentLoaded", function () {
            if (colorSizes && colorSizes.length > 0) {
                selectColor(colorSizes[0].colorId);
            }
        });

        ///Xử lý đặt hàng

    </script>


}